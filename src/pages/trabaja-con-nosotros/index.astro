---
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";
import { workWithUsPage, benefits, teamOpinions } from "@/services/contact";
import { servicesResume } from "@/services/services";
import Upload from "@/icons/upload.astro";

const {
  titulo_principal,
  subtitulo,
  cta_principal,
  titulo_1,
  texto_1,
  titulo_beneficios,
  titulo_opiniones_del_equipo,
  titulo_cv,
} = workWithUsPage;

const formFields = {
  name: "name",
  email: "email",
  linkedinProfile: "linkedinProfile",
  interest: "interest",
};
---

<Layout
  title=`Trabaja con nosotros | D2B`
  description="descripcion del servicio"
>
  <main>
    <section class="px-6 bg-top bg-cover bg-hero">
      <div class="m-auto max-w-screen-xl pb-36 pt-52">
        <h1
          class="text-white text-5xl font-bold max-w-[30ch] mb-6 animate-fade-left"
        >
          {titulo_principal}
        </h1>
        <p class="text-white text-2xl max-w-[45ch] mb-14 animate-fade-left">
          {subtitulo}
        </p>
        <a
          class="block px-8 py-4 font-bold text-center text-white rounded-lg md:inline-block bg-primary hover:bg-dark-primary animate-fade animate-delay-300"
          href="/contacto"
        >
          {cta_principal}
        </a>
      </div>
    </section>

    <section class="px-6 py-24">
      <div class="m-auto max-w-screen-xl md:flex md:gap-36">
        <h2 class="mb-8 text-3xl font-bold md:mb-0 md:text-4xl text-secondary">
          {titulo_1}
        </h2>
        <div>
          <div
            class="w-full mb-10 md:text-xl [&>p]:mb-6 md:[&>p]:mb-12 [&>p:last-child]:mb-0 [&_strong]:text-primary [&_a]:text-primary [&_a]:underline"
            set:html={texto_1}
          />
        </div>
      </div>
    </section>

    <section class="flex flex-col px-6 py-24 gap-5 gray-rounded-background">
      <div class="m-auto max-w-screen-xl">
        <h2
          class="mb-8 text-3xl font-bold text-center md:text-4xl text-secondary"
        >
          {titulo_beneficios}
        </h2>

        <div class="grid grid-cols-12 gap-6">
          {
            benefits.map(({ titulo, descripcion }, index) => (
              <article
                class:list={[
                  "p-6 md:p-10 border-2 rounded-lg border-neutral-200",
                  {
                    "bg-white col-start-1 md:col-start-2 col-span-12  md:col-span-5":
                      index == 0 || index == 4 || index == 8,
                  },
                  {
                    "bg-accent-purple col-span-12 md:col-span-6":
                      index == 1 || index == 2 || index == 5 || index == 6,
                  },
                  {
                    "bg-white col-span-12 md:col-span-5":
                      index == 3 || index == 7,
                  },
                ]}
              >
                <h4 class="text-xl font-bold text-secondary">{titulo}</h4>
                <p class="mt-4">{descripcion}</p>
              </article>
            ))
          }
        </div>
      </div>
    </section>

    <section class="px-6 py-24">
      <div class="m-auto max-w-screen-xl">
        <h2 class="mb-6 text-3xl font-bold md:text-4xl text-secondary">
          {titulo_opiniones_del_equipo}
        </h2>

        <div
          class="flex w-full mb-4 overflow-x-scroll gap-6 opinion-container snap-x snap-mandatory hidden-scrollbar scroll-smooth"
        >
          {
            teamOpinions.map(({ relato, autor }) => (
              <article class="flex flex-col justify-between min-w-full p-8 border-2 gap-16 md:p-10 opinion-card snap-start border-neutral-200 rounded-2xl md:min-w-96 md:w-96">
                <p>{relato}</p>
                <footer class="flex gap-4">
                  <Image
                    class="rounded-lg size-12 bg-accent-purple"
                    src={`${import.meta.env.DIRECTUS_URL}/assets/${autor.foto}`}
                    alt={`Foto de ${autor.nombre}`}
                    width={48}
                    height={48}
                  />
                  <div>
                    <h3 class="text-lg font-bold text-secondary">
                      {autor.nombre}
                    </h3>
                    <small class="text-sm">{autor.cargo}</small>
                  </div>
                </footer>
              </article>
            ))
          }
        </div>

        <div class="flex justify-center gap-4 md:hidden">
          {
            teamOpinions.map((opinion, index) => (
              <button
                class="rounded-full opinion-btn size-4 bg-neutral-200"
                class:list={{
                  "bg-secondary": index == 0,
                }}
              />
            ))
          }

          <script>
            const opinionContainer =
              document.querySelector(".opinion-container");

            const opinionCard = document.querySelector(
              ".opinion-card",
            ) as HTMLElement;
            const cardWidth = opinionCard.offsetWidth;

            const points = document.querySelectorAll(".opinion-btn");

            points.forEach((point, index) => {
              point.addEventListener("click", () => {
                opinionContainer.scrollLeft = cardWidth * index;
              });
            });

            opinionContainer.addEventListener("scroll", () => {
              const scroll = opinionContainer.scrollLeft;
              const index = Math.round(scroll / cardWidth);
              points.forEach((point) => point.classList.remove("bg-secondary"));
              points[index].classList.add("bg-secondary");
            });
          </script>
        </div>
      </div>
    </section>

    <section class="px-6 py-24">
      <div class="m-auto max-w-screen-xl">
        <h2 class="mb-8 text-3xl font-bold md:text-4xl text-secondary">
          {titulo_cv}
        </h2>

        <form class="relative">
          <div class="gap-6 md:flex">
            <div class="md:w-1/2">
              <label class="mb-1 font-bold text-primary" for={formFields.name}
                >Nombre completo
              </label>
              <input
                type="text"
                id={formFields.name}
                name={formFields.name}
                class="w-full p-2 mb-6 border rounded-md border-neutral-300"
                autocomplete="name"
                placeholder="Tu nombre"
              />
            </div>

            <div class="md:w-1/2">
              <label class="mb-1 font-bold text-primary" for={formFields.email}
                >Correo electrónico
              </label>
              <input
                type="email"
                id={formFields.email}
                name={formFields.email}
                class="w-full p-2 mb-6 border rounded-md border-neutral-300"
                autocomplete="email"
                placeholder="Tu correo"
              />
            </div>
          </div>

          <div class="gap-6 md:flex">
            <div class="md:w-1/2">
              <label
                class="mb-1 font-bold text-primary"
                for={formFields.linkedinProfile}
                >Perfil de LinkedIn
              </label>
              <input
                type="text"
                id={formFields.linkedinProfile}
                name={formFields.linkedinProfile}
                class="w-full p-2 mb-6 border rounded-md border-neutral-300"
                autocomplete="organization"
                placeholder="Tu empresa"
              />
            </div>
            <div class="md:w-1/2">
              <label
                class="mb-1 font-bold text-primary"
                for={formFields.interest}>Área de interes</label
              >
              <select
                id={formFields.interest}
                name={formFields.interest}
                class="w-full p-2 mb-6 border resize-none rounded-md border-neutral-300"
              >
                <option>Selecciona el área</option>
                {
                  servicesResume.map((area) => (
                    <option value={area.nombre_del_servicio}>
                      {area.nombre_del_servicio}
                    </option>
                  ))
                }
              </select>
            </div>
          </div>

          <!-- <label
            class="mb-1 font-bold text-primary"
            for={formFields.linkedinProfile}
            >CV
          </label>
          <div
            class="flex items-center justify-center p-2 mb-6 border border-dashed gap-1 rounded-md drop-area h-28 border-neutral-300"
          >
            <span class="text-primary"><Upload size={24} /></span>
            <p class="text-base text-neutral-400">
              Arrastra tu CV aquí o <button
                type="button"
                class="underline text-primary"
              >
                selecciona un archivo
              </button> para subir
            </p>
            <input
              id={formFields.interest}
              name={formFields.interest}
              type="file"
              hidden
            />
            <script>
              const $ = (e) => document.querySelector(e);
              const dropArea = $(".drop-area");
              const fileInput = $(".drop-area input") as HTMLInputElement;
              const btn = $(".drop-area button");
              const fileLabel = $(".drop-area p");

              btn.addEventListener("click", () => {
                fileInput.click();
              });

              dropArea.addEventListener("dragover", (e) => {
                e.preventDefault();
                dropArea.classList.add("border-primary", "bg-accent");
              });

              ["dragleave", "dragend"].forEach((event) => {
                dropArea.addEventListener(event, (e) => {
                  e.preventDefault();
                  dropArea.classList.remove("border-primary", "bg-accent");
                });
              });

              fileInput.addEventListener("change", (e) => {
                e.preventDefault();
                fileLabel.textContent = "nombre_del_archivo.pdf";
              });
            </script>
          </div> -->

          <p class="invisible text-red-600 error-message">
            Tu mensaje no se ha podido enviar. Intentalo nuevamente.
          </p>
          <input
            type="submit"
            value="Postularme"
            class="w-full px-8 py-4 mb-8 text-white cursor-pointer rounded-md md:w-auto md:mb-0 bold bg-primary"
          />

          <div
            class="absolute top-0 hidden w-full h-full bg-white success-message place-items-center"
          >
            <span class="text-2xl">¡Tu mensaje se ha enviado con éxito!</span>
          </div>
        </form>
      </div>
    </section>
  </main>
</Layout>

<script>
  const form = document.querySelector("form");
  form.addEventListener("submit", (e) => {
    e.preventDefault();

    const formData = new FormData(e.target as HTMLFormElement);
    const data = Object.fromEntries(formData);

    fetch("/api/send-email-work-with-us", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    }).then((res) => {
      if (res.ok)
        document
          .querySelector(".success-message")
          .classList.replace("hidden", "grid");
      else
        document.querySelector(".error-message").classList.remove("invisible");
    });
  });
</script>

<style>
  /* radial and linear at 230px  */
  .gray-rounded-background {
    background: radial-gradient(
        150% 300px at 50% 230px,
        #f5f8f8 75%,
        transparent 75.2%
      ),
      linear-gradient(180deg, transparent 230px, #f5f8f8 230px), #fff;
  }

  @media (width>=768px) {
    .gray-rounded-background {
      background: radial-gradient(
          100% 300px at 50% 230px,
          #f5f8f8 75%,
          transparent 75.2%
        ),
        linear-gradient(180deg, transparent 230px, #f5f8f8 230px), #fff;
    }
  }
</style>
