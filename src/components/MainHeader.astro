---
import { Image } from "astro:assets";
import { menuItems } from "@/constants";
---

<header class="fixed z-10 px-6 w-full backdrop-blur-sm bg-black/30">
  <section
    class="flex items-center justify-between max-w-screen-xl py-4 m-auto"
  >
    <a href="/">
      <Image width={52} height={52} src="/D2B-logo.svg" alt="Logo de D2B" />
    </a>

    <menu-button class="relative">
      <button
        id="open-close-button"
        class="group peer relative z-10 h-6 w-9 *:bg-white *:absolute *:left-0 *:w-full *:rounded-full *:h-1 *:duration-200"
        type="button"
      >
        <span
          class="top-0 group-[.active]:rotate-45 group-[.active]:top-1/2 group-[.active]:bg-neutral-600 group-[.active]:-translate-y-1/2 group-hover:bg-neutral-200"
        ></span>
        <span
          class="-translate-y-1/2 top-1/2 group-[.active]:opacity-0 group-hover:bg-neutral-200"
        ></span>
        <span
          class="bottom-0 group-[.active]:-rotate-45 group-[.active]:top-1/2 group-[.active]:bg-neutral-600 group-[.active]:-translate-y-1/2 group-hover:bg-neutral-200"
        ></span>
      </button>

      <nav
        class="absolute -right-4 top-16 flex flex-col pt-14 pb-6 text-xl opacity-0 duration-300 -translate-y-20 bg-white rounded-lg w-80 peer-[.active]:opacity-100"
      >
        {
          menuItems.map(({ name, slug }, index) => (
            <a
              class={`px-6 py-3 opacity-0 text-neutral-600 hover:text-accent hover:bg-accent/10 fade`}
              href={slug}
              style={`animation-delay: ${200 + 100 * index}ms`}
            >
              {name}
            </a>
          ))
        }
      </nav>
    </menu-button>
  </section>

  <div class="scroll absolute left-0"></div>
</header>

<script>
  class MenuButton extends HTMLElement {
    constructor() {
      super();

      const openCloseButton = this.querySelector(
        "#open-close-button",
      ) as HTMLButtonElement;

      openCloseButton.addEventListener("click", () => {
        openCloseButton.classList.toggle("active");
      });

      document.addEventListener("click", (e) => {
        if (!this.contains(e.target as HTMLElement))
          openCloseButton.classList.remove("active");
      });

      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") openCloseButton.classList.remove("active");
      });
    }
  }
  customElements.define("menu-button", MenuButton);
</script>

<style>
  .scroll {
    height: 4px;
    width: 0;
    animation: timeline linear both;
    animation-timeline: scroll(root);
  }
  @keyframes timeline {
    0% {
      background-color: red;
    }
    25% {
      background-color: cyan;
    }
    50% {
      background-color: yellow;
    }
    75% {
      background-color: blue;
    }
    to {
      background-color: lightgreen;
      width: 100%;
    }
  }

  nav {
    clip-path: inset(0 0 100% 100%);
  }
  button.active + nav {
    clip-path: inset(0 0 0 0);
  }

  @keyframes fade {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  button.active + nav > a.fade {
    animation: fade 1s both;
  }
</style>
